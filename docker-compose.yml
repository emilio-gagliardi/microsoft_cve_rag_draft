services:
  neo4j:
    image: neo4j:5.22.0
    container_name: neo4j-container
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - $HOME/neo4j/plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
    networks:
      - app-network
    restart: "no"

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant-container
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./qdrant_storage:/qdrant/storage:z
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:6333/health || exit 1"
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
    restart: unless-stopped

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: fastapi-container
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    depends_on:
      qdrant:
        condition: service_healthy
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=bolt://neo4j-container:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - QDRANT_URL=http://qdrant-container:6333
    networks:
      - app-network
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: job-applications-management:latest
    container_name: job-applications-management-crew
    env_file:
      - .env.docker
    environment:
      - ENVIRONMENT=docker
    volumes:
      - ./job_applications_management:/app/job_applications_management
      - ./data:/app/data
      - ./notebooks:/app/notebooks
    ports:
      - "8001:8000"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  neo4j_data:
  qdrant_storage:


networks:
  app-network:
    driver: bridge
